/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/router';

import { AddRoom as AddRoom } from './components/add-room/add-room';

interface HTMLAddRoomElement extends AddRoom, HTMLElement {
}
declare var HTMLAddRoomElement: {
  prototype: HTMLAddRoomElement;
  new (): HTMLAddRoomElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "add-room": HTMLAddRoomElement;
  }
  interface ElementTagNameMap {
      "add-room": HTMLAddRoomElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "add-room": JSXElements.AddRoomAttributes;
      }
  }
  namespace JSXElements {
      export interface AddRoomAttributes extends HTMLAttributes {
        
      }
  }
}

import { AppRoot as AppRoot } from './components/app-root/app-root';

interface HTMLAppRootElement extends AppRoot, HTMLElement {
}
declare var HTMLAppRootElement: {
  prototype: HTMLAppRootElement;
  new (): HTMLAppRootElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "app-root": HTMLAppRootElement;
  }
  interface ElementTagNameMap {
      "app-root": HTMLAppRootElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "app-root": JSXElements.AppRootAttributes;
      }
  }
  namespace JSXElements {
      export interface AppRootAttributes extends HTMLAttributes {
        
      }
  }
}

import { IonicChat as IonicChat } from './components/ionic-chat/ionic-chat';

interface HTMLIonicChatElement extends IonicChat, HTMLElement {
}
declare var HTMLIonicChatElement: {
  prototype: HTMLIonicChatElement;
  new (): HTMLIonicChatElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "ionic-chat": HTMLIonicChatElement;
  }
  interface ElementTagNameMap {
      "ionic-chat": HTMLIonicChatElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "ionic-chat": JSXElements.IonicChatAttributes;
      }
  }
  namespace JSXElements {
      export interface IonicChatAttributes extends HTMLAttributes {
        
          history?: any
      }
  }
}

import { LoginPage as LoginPage } from './components/login-page/login-page';

interface HTMLLoginPageElement extends LoginPage, HTMLElement {
}
declare var HTMLLoginPageElement: {
  prototype: HTMLLoginPageElement;
  new (): HTMLLoginPageElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "login-page": HTMLLoginPageElement;
  }
  interface ElementTagNameMap {
      "login-page": HTMLLoginPageElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "login-page": JSXElements.LoginPageAttributes;
      }
  }
  namespace JSXElements {
      export interface LoginPageAttributes extends HTMLAttributes {
        
          history?: any
      }
  }
}

import { SignupPage as SignupPage } from './components/signup-page/signup-page';

interface HTMLSignupPageElement extends SignupPage, HTMLElement {
}
declare var HTMLSignupPageElement: {
  prototype: HTMLSignupPageElement;
  new (): HTMLSignupPageElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "signup-page": HTMLSignupPageElement;
  }
  interface ElementTagNameMap {
      "signup-page": HTMLSignupPageElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "signup-page": JSXElements.SignupPageAttributes;
      }
  }
  namespace JSXElements {
      export interface SignupPageAttributes extends HTMLAttributes {
        
          history?: any
      }
  }
}

